<!-- 	author: Ethan Gruber, American Numismatic Society 
	last modified: May 2021
	Function: Either upload an image to the config absolute_path for use by the iiif_server (if set) or manually enter image URLs.
-->
<xbl:xbl xmlns="http://www.w3.org/1999/xhtml" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:ev="http://www.w3.org/2001/xml-events"
	xmlns:xxforms="http://orbeon.org/oxf/xml/xforms" xmlns:fr="http://orbeon.org/oxf/xml/form-runner" xmlns:xbl="http://www.w3.org/ns/xbl"
	xmlns:xxbl="http://orbeon.org/oxf/xml/xbl" xmlns:oxf="http://www.orbeon.com/oxf/processors" xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:numishare="https://github.com/ewg118/numishare" xmlns:nuds="http://nomisma.org/nuds" xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:mets="http://www.loc.gov/METS/">
	<xbl:binding id="numishare-file-upload" element="numishare|file-upload">
		<xbl:template>
			<xforms:group xbl:attr="model context ref bind" xxbl:scope="outer">
				<xbl:content includes="xforms|label,xforms|help,xforms|hint,xforms|alert"/>
				<xforms:group xxbl:scope="inner">
					<xforms:var name="binding" as="node()?">
						<xxforms:sequence select="." xxbl:scope="outer"/>
					</xforms:var>
					<!-- set collection name -->
					<xforms:action ev:event="xforms-enabled" ev:target="#observer">
						<xforms:action if="string(xxforms:get-session-attribute('collection-name'))">
							<xforms:setvalue ref="instance('control-instance')/collection-name" value="xxforms:get-session-attribute('collection-name')"/>
							<xforms:send submission="load-config"/>
						</xforms:action>
						<xforms:action if="not(string(xxforms:get-session-attribute('collection-name')))">
							<xforms:insert context="instance('control-instance')" nodeset="collection-name" position="after"
								origin="xxforms:call-xpl('oxf:/apps/numishare/xpl/get-authentication.xpl', 'dump', instance('dump'), 'data')"/>
							<xforms:send submission="load-collections"/>
						</xforms:action>

						<!-- if there's already a /tmp URL in the file, then clear the file and toggle the case -->
						<xforms:action if="string(instance('file'))">
							<xforms:setvalue ref="instance('file')"/>
							<xforms:setvalue ref="instance('file')/@filename"/>
							<xforms:setvalue ref="instance('file')/@mediatype"/>
							<xforms:setvalue ref="instance('file')/@size"/>
							<xforms:toggle case="upload"/>
						</xforms:action>
					</xforms:action>

					<xforms:group ref="$binding">
						<xforms:group ref=".[count(mets:file) = 0]">
							<div class="alert alert-box alert-danger">
								<p>
									<span class="glyphicon glyphicon-warning-sign"/>
									<strong>Warning!</strong> An image is required before the record can be saved.</p>
							</div>
						</xforms:group>
						
						<div class="row">		
							<div class="col-md-3">
								<xforms:select1 ref="instance('interface-type')" appearance="full" id="interface-type-control">
									<!--<xforms:label>Image Type</xforms:label>-->
									<xforms:itemset nodeset="instance('interfaces')/type">
										<xforms:label ref="."/>
										<xforms:value ref="@id"/>
									</xforms:itemset>
									<xforms:action ev:event="xforms-value-changed">
										<xforms:action if=". = 'upload'">
											<xforms:delete nodeset="$binding/*"/>
											<xforms:toggle case="upload"/>
										</xforms:action>
										<xforms:action if=". = 'manual'">
											<xforms:delete nodeset="$binding/*"/>
											<xforms:toggle case="manual"/>
										</xforms:action>
									</xforms:action>
								</xforms:select1>
							</div>

							<div class="col-md-9">
								<xforms:switch>
									<xforms:case id="manual">
										<div class="trigger_container">
											<xforms:group ref=".[count(mets:file[@USE='thumbnail']) = 0]">
												<xforms:trigger appearance="minimal">
													<xforms:label>
														<span class="glyphicon glyphicon-plus"/> Thumbnail</xforms:label>
													<xforms:action ev:event="DOMActivate">
														<xforms:insert context="." nodeset="./child::node()[last()]" origin="instance('file-template')"/>
														<xforms:setvalue ref="mets:file[last()]/@USE">thumbnail</xforms:setvalue>
														<xforms:insert context="mets:file[last()]" origin="xforms:attribute('MIMETYPE', 'image/jpeg')"/>
													</xforms:action>
												</xforms:trigger>
											</xforms:group>

											<xforms:group ref=".[count(mets:file[@USE='reference']) = 0]">
												<xforms:trigger appearance="minimal">
													<xforms:label>
														<span class="glyphicon glyphicon-plus"/> Reference</xforms:label>
													<xforms:action ev:event="DOMActivate">
														<xforms:insert context="." nodeset="./child::node()[last()]" origin="instance('file-template')"/>
														<xforms:setvalue ref="mets:file[last()]/@USE">reference</xforms:setvalue>
														<xforms:insert context="mets:file[last()]" origin="xforms:attribute('MIMETYPE', 'image/jpeg')"/>
													</xforms:action>
												</xforms:trigger>
											</xforms:group>

											<xforms:group ref=".[count(mets:file[@USE='iiif']) = 0]">
												<xforms:trigger appearance="minimal">
													<xforms:label>
														<span class="glyphicon glyphicon-plus"/> IIIF Service</xforms:label>
													<xforms:action ev:event="DOMActivate">
														<xforms:insert context="." nodeset="./child::node()[last()]" origin="instance('file-template')"/>
														<xforms:setvalue ref="mets:file[last()]/@USE">iiif</xforms:setvalue>
													</xforms:action>
												</xforms:trigger>
											</xforms:group>
										</div>

										<xforms:group ref=".[count(mets:file) &gt; 0]">
											<xforms:repeat nodeset="mets:file">
												<div>
													<h4>
														<xforms:output
															value="if (@USE='iiif') then 'IIIF Service' else concat(upper-case(substring(@USE, 1, 1)), substring(@USE, 2))"
														/>
													</h4>
													<xforms:trigger appearance="minimal">
														<xforms:action ev:event="DOMActivate">
															<xforms:delete nodeset="."/>
														</xforms:action>
														<xforms:label>
															<span class="glyphicon glyphicon-remove"/>
														</xforms:label>
													</xforms:trigger>

													<!-- create a different input for IIIF services in order to test validity of the URI -->
													<xforms:group ref=".[@USE = 'iiif']">
														<xforms:var name="element" select="concat(parent::node()/@USE, '_iiif')"/>

														<div>
															<xforms:input ref="instance('control-instance')/*[local-name() = $element]">
																<xforms:label>URL</xforms:label>
																<xforms:alert>Must be an absolute URL pattern.</xforms:alert>
																<xforms:hint>This should be the URL portion that precedes '/info.json'</xforms:hint>
																<xforms:action ev:event="xforms-value-changed">
																	<!-- fire a submission to get the info.json for the given IIIF service -->
																	<xforms:var name="service" select="."/>
																	<xforms:setvalue ref="instance('control-instance')/iiif_service" value="$service"/>
																	<xforms:send submission="get-info-json"/>
																	<!-- if the JSON successfully loads, then set the value  -->
																	<xforms:action ev:event="xforms-submit-done">
																		<xforms:action
																			if="instance('control-instance')/obverse_iiif = instance('control-instance')/iiif_service">
																			<xforms:setvalue
																				ref="$binding/mets:file[@USE='iiif']/mets:FLocat/@xlink:href"
																				value="instance('control-instance')/obverse_iiif"/>
																		</xforms:action>
																		<xforms:action
																			if="instance('control-instance')/reverse_iiif = instance('control-instance')/iiif_service">
																			<xforms:setvalue
																				ref="$binding/mets:file[@USE='iiif']/mets:FLocat/@xlink:href"
																				value="instance('control-instance')/reverse_iiif"/>
																		</xforms:action>
																		<xforms:action
																			if="instance('control-instance')/combined_iiif = instance('control-instance')/iiif_service">
																			<xforms:setvalue
																				ref="$binding/mets:file[@USE='iiif']/mets:FLocat/@xlink:href"
																				value="instance('control-instance')/combined_iiif"/>
																		</xforms:action>
																	</xforms:action>
																</xforms:action>
															</xforms:input>
														</div>
													</xforms:group>
													<xforms:group ref=".[not(@USE = 'iiif')]">
														<div>
															<xforms:input ref="mets:FLocat/@xlink:href">
																<xforms:label>URL</xforms:label>
																<xforms:alert>Must be an absolute URL pattern.</xforms:alert>
															</xforms:input>
														</div>
													</xforms:group>

													<!--<xforms:group ref=".[@MIMETYPE]">
												<div>
													<xforms:select1 ref="@MIMETYPE">
														<xforms:label>MIME Type</xforms:label>
														<xforms:itemset nodeset="instance('mimetypes')//type">
															<xforms:label ref="."/>
															<xforms:value ref="."/>
														</xforms:itemset>
													</xforms:select1>
												</div>
											</xforms:group>-->
												</div>
											</xforms:repeat>
										</xforms:group>
									</xforms:case>
									<xforms:case id="upload">

										<xforms:group ref=".[not(mets:file[@USE='iiif'])]">
											<h4>Upload Image to IIIF Server</h4>
											<xforms:upload ref="instance('file')" xxforms:size="60">
												<xforms:filename ref="@filename"/>
												<xforms:mediatype ref="@mediatype"/>
												<xxforms:size ref="@size"/>
											</xforms:upload>

											<xforms:trigger>
												<xforms:label>Upload</xforms:label>
												<xforms:action ev:event="DOMActivate">
													<xforms:send submission="upload-resize"/>
													<xforms:action ev:event="xforms-submit-done">
														<xforms:setvalue ref="instance('control-instance')/side" value="substring($binding/@USE, 1, 3)"/>
														<xforms:setvalue ref="instance('control-instance')/id"
															value="$binding/ancestor::nuds:nuds/nuds:control/nuds:recordId"/>

														<!-- set the parameters for moving the file -->
														<xforms:setvalue ref="instance('generator-config')/url" value="instance('file')"/>
														<xforms:setvalue ref="instance('generator-config')/content-type" value="instance('file')/@mediatype"/>

														<xforms:var name="filename"
															select="concat(instance('control-instance')/id, '.', instance('control-instance')/side, '.jpg')"/>
														<xforms:setvalue ref="instance('serializer-config')/url"
															value="concat(instance('config')/images/absolute_path, '/', $filename)"/>
														<xforms:insert nodeset="instance('dump')"
															origin="xxforms:call-xpl('oxf:/apps/numishare/xpl/xforms/move-image.xpl', ('generator-config', 'serializer-config'), (instance('generator-config'), instance('serializer-config')), 'data')"/>

														<!-- set the IIIF Service metadata -->
														<xforms:insert context="." nodeset="./child::node()[last()]" origin="instance('file-template')"/>
														<xforms:setvalue ref="mets:file[last()]/@USE">iiif</xforms:setvalue>
														<xforms:setvalue ref="$binding/mets:file[@USE='iiif']/mets:FLocat/@xlink:href"
															value="concat(instance('config')/images/iiif_server, encode-for-uri($filename))"/>
													</xforms:action>
												</xforms:action>
											</xforms:trigger>
										</xforms:group>
									</xforms:case>
								</xforms:switch>
							</div>
						</div>

					</xforms:group>
					<!--<fr:xforms-inspector/>-->

					<!-- ***********************  DIALOG INTERNAL MODEL *********************** -->
					<xforms:model id="file-upload-model" xmlns:xi="http://www.w3.org/2001/XInclude">
						<!-- exist URL is stored in an XML file -->
						<xforms:instance id="exist-config" xxforms:exclude-result-prefixes="#all">
							<xi:include href="../../../exist-config.xml"/>
						</xforms:instance>

						<xforms:instance id="control-instance" xxforms:exclude-result-prefixes="#all">
							<control xmlns="">
								<collection-name/>
								<id/>
								<side/>
								<combined_iiif/>
								<obverse_iiif/>
								<reverse_iiif/>
								<iiif_service/>
							</control>
						</xforms:instance>

						<!-- collections/authentication instances -->
						<xforms:instance id="collections-list" xxforms:exclude-result-prefixes="#all">
							<collections xmlns="">
								<collection roll="admin" name="numishare"/>
							</collections>
						</xforms:instance>

						<!-- site info -->
						<xforms:instance id="config">
							<config xmlns="" xxforms:exclude-result-prefixes="#all"/>
						</xforms:instance>

						<xforms:instance id="interface-type" xxforms:exclude-result-prefixes="#all">
							<type xmlns="">manual</type>
						</xforms:instance>

						<xforms:instance id="interfaces" xxforms:exclude-result-prefixes="#all">
							<interfaces xmlns="">
								<type id="manual">Insert URIs Manually</type>
							</interfaces>
						</xforms:instance>

						<!-- FILE UPLOADS -->
						<xforms:instance id="file">
							<!-- Start with placeholders for three files -->
							<file xsi:type="xs:anyURI" filename="" mediatype="" size="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
						</xforms:instance>

						<!-- image uploading, base64 encoding and xml-rpc payload -->
						<xforms:instance id="generator-config" xxforms:exclude-result-prefixes="#all">
							<config xmlns="">
								<url/>
								<mode>binary</mode>
								<content-type/>
							</config>
						</xforms:instance>

						<xforms:instance id="serializer-config" xxforms:exclude-result-prefixes="#all">
							<config xmlns="">
								<url/>
							</config>
						</xforms:instance>

						<xforms:instance id="delete-config" xxforms:exclude-result-prefixes="#all">
							<config xmlns="">
								<delete>
									<url/>
								</delete>
							</config>
						</xforms:instance>

						<xforms:instance id="dump">
							<dump xmlns=""/>
						</xforms:instance>

						<!-- METS templates -->
						<xforms:instance id="file-template" xxforms:exclude-result-prefixes="#all">
							<mets:file USE="" xmlns="">
								<mets:FLocat LOCTYPE="URL" xlink:href=""/>
							</mets:file>
						</xforms:instance>

						<!-- instance for IIIF info.json response -->
						<xforms:instance id="iiif-response">
							<xml xmlns=""/>
						</xforms:instance>
						
						<!-- ********** BINDINGS ********** -->
						<xforms:bind nodeset="instance('control-instance')">
							<xforms:bind nodeset="obverse_iiif" required="true()" constraint="matches(., '(https?|ftp)://(-\.)?([^\s/?\.#-]+\.?)+(/[^\s]*)?$')"/>
							<xforms:bind nodeset="reverse_iiif" required="true()" constraint="matches(., '(https?|ftp)://(-\.)?([^\s/?\.#-]+\.?)+(/[^\s]*)?$')"/>
						</xforms:bind>


						<!-- ***** SUBMISSIONS ***** -->
						<!-- ***** READ JSON FOR IIIF VALIDATION *****-->
						<xforms:submission id="get-info-json" serialization="none" method="get" action="{instance('control-instance')/iiif_service}/info.json"
							replace="instance" instance="iiif-response">
							<xforms:header>
								<xforms:name>User-Agent</xforms:name>
								<xforms:value>XForms/Numishare</xforms:value>
							</xforms:header>
							<!-- if the response is not valid JSON -->
							<xforms:message ev:event="xforms-submit-error" level="modal">Unable to get a valid JSON response from the IIIF service
								URI.</xforms:message>
						</xforms:submission>

						<!-- Execute Upload -->
						<xforms:submission id="upload-resize" method="post" replace="none" resource="test:"/>

						<xforms:submission id="load-collections" serialization="none" method="get" action="{instance('exist-config')/url}collections-list.xml"
							replace="instance" instance="collections-list" xxforms:username="{instance('exist-config')/username}"
							xxforms:password="{instance('exist-config')/password}">
							<!-- if the config loads successfully, set the collection names based on authentication -->
							<xforms:action ev:event="xforms-submit-done">
								<!-- set default if security is false -->
								<xforms:action if="not(string(instance('control-instance')/request-security/role))">
									<xforms:setvalue ref="instance('control-instance')/collection-name">numishare</xforms:setvalue>
								</xforms:action>
								<!-- if there is a security role, set the collection-name value if it is in the list, otherwise set new collection name -->
								<xforms:action if="string(instance('control-instance')/request-security/role)">
									<xforms:action
										if="string(instance('collections-list')/collection[@role=instance('control-instance')/request-security/role]/@name)">
										<xforms:setvalue ref="instance('control-instance')/collection-name"
											value="instance('collections-list')/collection[@role=instance('control-instance')/request-security/role]/@name"/>
									</xforms:action>
								</xforms:action>
								<xforms:send submission="load-config"/>
							</xforms:action>
							<!-- if the config has not been created (given that the URL in ../exist-config.xml is correct), create it -->
							<xforms:message ev:event="xforms-submit-error" level="modal">Unable to load Numishare collections list.</xforms:message>
						</xforms:submission>

						<!-- get image dimensions from config -->
						<xforms:submission id="load-config" serialization="none" method="get"
							action="{instance('exist-config')/url}{instance('control-instance')/collection-name}/config.xml"
							xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}" replace="instance"
							instance="config">
							<xforms:message ev:event="xforms-submit-error" level="modal">Unable to load Numishare configuration</xforms:message>
							<xforms:action ev:event="xforms-submit-done" if="string(instance('config')/images/iiif_server)">
								<xforms:insert context="instance('interfaces')"
									origin="xforms:element('type', (xforms:attribute('id', 'upload'), 'Upload to IIIF Server'))"
									if="not(instance('interfaces')/type[@id='upload'])"/>
								<xforms:setvalue ref="instance('interface-type')">upload</xforms:setvalue>
							</xforms:action>
						</xforms:submission>
					</xforms:model>
				</xforms:group>
			</xforms:group>
		</xbl:template>
	</xbl:binding>
</xbl:xbl>
